#pragma once

namespace offsets
{
	namespace UWorld
	{
		constexpr auto PersistentLevel = 0x30; // Size: 8, Type: struct ULevel*
		constexpr auto NetDriver = 0x38; // Size: 8, Type: struct UNetDriver*
		constexpr auto LineBatcher = 0x40; // Size: 8, Type: struct ULineBatchComponent*
		constexpr auto PersistentLineBatcher = 0x48; // Size: 8, Type: struct ULineBatchComponent*
		constexpr auto ForegroundLineBatcher = 0x50; // Size: 8, Type: struct ULineBatchComponent*
		constexpr auto NetworkManager = 0x58; // Size: 8, Type: struct AGameNetworkManager*
		constexpr auto PhysicsCollisionHandler = 0x60; // Size: 8, Type: struct UPhysicsCollisionHandler*
		constexpr auto ExtraReferencedObjects = 0x68; // Size: 16, Type: struct TArray<struct UObject*>
		constexpr auto PerModuleDataObjects = 0x78; // Size: 16, Type: struct TArray<struct UObject*>
		constexpr auto StreamingLevels = 0x88; // Size: 16, Type: struct TArray<struct ULevelStreaming*>
		constexpr auto StreamingLevelsToConsider = 0x98; // Size: 40, Type: struct FStreamingLevelsToConsider
		constexpr auto StreamingLevelsPrefix = 0xc0; // Size: 16, Type: struct FString
		constexpr auto CurrentLevelPendingVisibility = 0xd0; // Size: 8, Type: struct ULevel*
		constexpr auto CurrentLevelPendingInvisibility = 0xd8; // Size: 8, Type: struct ULevel*
		constexpr auto DemoNetDriver = 0xe0; // Size: 8, Type: struct UDemoNetDriver*
		constexpr auto MyParticleEventManager = 0xe8; // Size: 8, Type: struct AParticleEventManager*
		constexpr auto DefaultPhysicsVolume = 0xf0; // Size: 8, Type: struct APhysicsVolume*
		constexpr auto bAreConstraintsDirty = 0x10e; // Size: 1, Type: char
		constexpr auto NavigationSystem = 0x110; // Size: 8, Type: struct UNavigationSystemBase*
		constexpr auto AuthorityGameMode = 0x118; // Size: 8, Type: struct AGameModeBase*
		constexpr auto GameState = 0x120; // Size: 8, Type: struct AGameStateBase*
		constexpr auto AISystem = 0x128; // Size: 8, Type: struct UAISystemBase*
		constexpr auto AvoidanceManager = 0x130; // Size: 8, Type: struct UAvoidanceManager*
		constexpr auto Levels = 0x138; // Size: 16, Type: struct TArray<struct ULevel*>
		constexpr auto LevelCollections = 0x148; // Size: 16, Type: struct TArray<struct FLevelCollection>
		constexpr auto OwningGameInstance = 0x180; // Size: 8, Type: struct UGameInstance*
		constexpr auto ParameterCollectionInstances = 0x188; // Size: 16, Type: struct TArray<struct UMaterialParameterCollectionInstance*>
		constexpr auto CanvasForRenderingToTarget = 0x198; // Size: 8, Type: struct UCanvas*
		constexpr auto CanvasForDrawMaterialToRenderTarget = 0x1a0; // Size: 8, Type: struct UCanvas*
		constexpr auto ComponentsThatNeedPreEndOfFrameSync = 0x1f8; // Size: 80, Type: struct TSet<struct UActorComponent*>
		constexpr auto ComponentsThatNeedEndOfFrameUpdate = 0x248; // Size: 16, Type: struct TArray<struct UActorComponent*>
		constexpr auto ComponentsThatNeedEndOfFrameUpdate_OnGameThread = 0x258; // Size: 16, Type: struct TArray<struct UActorComponent*>
		constexpr auto WorldComposition = 0x5e0; // Size: 8, Type: struct UWorldComposition*
		constexpr auto PSCPool = 0x670; // Size: 88, Type: struct FWorldPSCPool
	}

	namespace AActor
	{
		constexpr auto PrimaryActorTick = 0x28; // Size: 48, Type: struct FActorTickFunction
		constexpr auto bNetTemporary = 0x58; // Size: 1, Type: char
		constexpr auto bNetStartup = 0x58; // Size: 1, Type: char
		constexpr auto bOnlyRelevantToOwner = 0x58; // Size: 1, Type: char
		constexpr auto bAlwaysRelevant = 0x58; // Size: 1, Type: char
		constexpr auto bReplicateMovement = 0x58; // Size: 1, Type: char
		constexpr auto bHidden = 0x58; // Size: 1, Type: char
		constexpr auto bTearOff = 0x58; // Size: 1, Type: char
		constexpr auto bExchangedRoles = 0x58; // Size: 1, Type: char
		constexpr auto bNetLoadOnClient = 0x59; // Size: 1, Type: char
		constexpr auto bNetUseOwnerRelevancy = 0x59; // Size: 1, Type: char
		constexpr auto bRelevantForNetworkReplays = 0x59; // Size: 1, Type: char
		constexpr auto bRelevantForLevelBounds = 0x59; // Size: 1, Type: char
		constexpr auto bReplayRewindable = 0x59; // Size: 1, Type: char
		constexpr auto bAllowTickBeforeBeginPlay = 0x59; // Size: 1, Type: char
		constexpr auto bAutoDestroyWhenFinished = 0x59; // Size: 1, Type: char
		constexpr auto bCanBeDamaged = 0x59; // Size: 1, Type: char
		constexpr auto bBlockInput = 0x5a; // Size: 1, Type: char
		constexpr auto bCollideWhenPlacing = 0x5a; // Size: 1, Type: char
		constexpr auto bFindCameraComponentWhenViewTarget = 0x5a; // Size: 1, Type: char
		constexpr auto bGenerateOverlapEventsDuringLevelStreaming = 0x5a; // Size: 1, Type: char
		constexpr auto bIgnoresOriginShifting = 0x5a; // Size: 1, Type: char
		constexpr auto bEnableAutoLODGeneration = 0x5a; // Size: 1, Type: char
		constexpr auto bIsEditorOnlyActor = 0x5a; // Size: 1, Type: char
		constexpr auto bActorSeamlessTraveled = 0x5a; // Size: 1, Type: char
		constexpr auto bReplicates = 0x5b; // Siz	e: 1, Type: char
		constexpr auto bCanBeInCluster = 0x5b; // Size: 1, Type: char
		constexpr auto bAllowReceiveTickEventOnDedicatedServer = 0x5b; // Size: 1, Type: char
		constexpr auto bActorEnableCollision = 0x5c; // Size: 1, Type: char
		constexpr auto bActorIsBeingDestroyed = 0x5c; // Size: 1, Type: char
		constexpr auto UpdateOverlapsMethodDuringLevelStreaming = 0x5d; // Size: 1, Type: enum class EActorUpdateOverlapsMethod
		constexpr auto DefaultUpdateOverlapsMethodDuringLevelStreaming = 0x5e; // Size: 1, Type: enum class EActorUpdateOverlapsMethod
		constexpr auto RemoteRole = 0x5f; // Size: 1, Type: enum class ENetRole
		constexpr auto ReplicatedMovement = 0x60; // Size: 52, Type: struct FRepMovement
		constexpr auto InitialLifeSpan = 0x94; // Size: 4, Type: float
		constexpr auto CustomTimeDilation = 0x98; // Size: 4, Type: float
		constexpr auto AttachmentReplication = 0xa0; // Size: 64, Type: struct FRepAttachment
		constexpr auto Owner = 0xe0; // Size: 8, Type: struct AActor*
		constexpr auto NetDriverName = 0xe8; // Size: 8, Type: struct FName
		constexpr auto Role = 0xf0; // Size: 1, Type: enum class ENetRole
		constexpr auto NetDormancy = 0xf1; // Size: 1, Type: enum class ENetDormancy
		constexpr auto SpawnCollisionHandlingMethod = 0xf2; // Size: 1, Type: enum class ESpawnActorCollisionHandlingMethod
		constexpr auto AutoReceiveInput = 0xf3; // Size: 1, Type: enum class EAutoReceiveInput
		constexpr auto InputPriority = 0xf4; // Size: 4, Type: int32_t
		constexpr auto InputComponent = 0xf8; // Size: 8, Type: struct UInputComponent*
		constexpr auto NetCullDistanceSquared = 0x100; // Size: 4, Type: float
		constexpr auto NetTag = 0x104; // Size: 4, Type: int32_t
		constexpr auto NetUpdateFrequency = 0x108; // Size: 4, Type: float
		constexpr auto MinNetUpdateFrequency = 0x10c; // Size: 4, Type: float
		constexpr auto NetPriority = 0x110; // Size: 4, Type: float
		constexpr auto Instigator = 0x118; // Size: 8, Type: struct APawn*
		constexpr auto Children = 0x120; // Size: 16, Type: struct TArray<struct AActor*>
		constexpr auto RootComponent = 0x130; // Size: 8, Type: struct USceneComponent*
		constexpr auto ControllingMatineeActors = 0x138; // Size: 16, Type: struct TArray<struct AMatineeActor*>
		constexpr auto Layers = 0x150; // Size: 16, Type: struct TArray<struct FName>
		constexpr auto ParentComponent = 0x160; // Size: 8, Type: struct TWeakObjectPtr<UChildActorComponent>
		constexpr auto Tags = 0x170; // Size: 16, Type: struct TArray<struct FName>
		constexpr auto OnTakeAnyDamage = 0x180; // Size: 1, Type: struct FMulticastSparseDelegate
		constexpr auto OnTakePointDamage = 0x181; // Size: 1, Type: struct FMulticastSparseDelegate
		constexpr auto OnTakeRadialDamage = 0x182; // Size: 1, Type: struct FMulticastSparseDelegate
		constexpr auto OnActorBeginOverlap = 0x183; // Size: 1, Type: struct FMulticastSparseDelegate
		constexpr auto OnActorEndOverlap = 0x184; // Size: 1, Type: struct FMulticastSparseDelegate
		constexpr auto OnBeginCursorOver = 0x185; // Size: 1, Type: struct FMulticastSparseDelegate
		constexpr auto OnEndCursorOver = 0x186; // Size: 1, Type: struct FMulticastSparseDelegate
		constexpr auto OnClicked = 0x187; // Size: 1, Type: struct FMulticastSparseDelegate
		constexpr auto OnReleased = 0x188; // Size: 1, Type: struct FMulticastSparseDelegate
		constexpr auto OnInputTouchBegin = 0x189; // Size: 1, Type: struct FMulticastSparseDelegate
		constexpr auto OnInputTouchEnd = 0x18a; // Size: 1, Type: struct FMulticastSparseDelegate
		constexpr auto OnInputTouchEnter = 0x18b; // Size: 1, Type: struct FMulticastSparseDelegate
		constexpr auto OnInputTouchLeave = 0x18c; // Size: 1, Type: struct FMulticastSparseDelegate
		constexpr auto OnActorHit = 0x18d; // Size: 1, Type: struct FMulticastSparseDelegate
		constexpr auto OnDestroyed = 0x18e; // Size: 1, Type: struct FMulticastSparseDelegate
		constexpr auto OnEndPlay = 0x18f; // Size: 1, Type: struct FMulticastSparseDelegate
		constexpr auto InstanceComponents = 0x1f0; // Size: 16, Type: struct TArray<struct UActorComponent*>
		constexpr auto BlueprintCreatedComponents = 0x200; // Size: 16, Type: struct TArray<struct UActorComponent*>
	}

	namespace USceneComponent
	{
		constexpr auto PhysicsVolume = 0xb8; // Size: 8, Type: struct TWeakObjectPtr<APhysicsVolume>
		constexpr auto AttachParent = 0xc0; // Size: 8, Type: struct USceneComponent*
		constexpr auto AttachSocketName = 0xc8; // Size: 8, Type: struct FName
		constexpr auto AttachChildren = 0xd0; // Size: 16, Type: struct TArray<struct USceneComponent*>
		constexpr auto ClientAttachedChildren = 0xe0; // Size: 16, Type: struct TArray<struct USceneComponent*>
		constexpr auto RelativeLocation = 0x11c; // Size: 12, Type: struct FVector
		constexpr auto RelativeRotation = 0x128; // Size: 12, Type: struct FRotator
		constexpr auto RelativeScale3D = 0x134; // Size: 12, Type: struct FVector
		constexpr auto ComponentVelocity = 0x140; // Size: 12, Type: struct FVector
		constexpr auto bComponentToWorldUpdated = 0x14c; // Size: 1, Type: char
		constexpr auto bAbsoluteLocation = 0x14c; // Size: 1, Type: char
		constexpr auto bAbsoluteRotation = 0x14c; // Size: 1, Type: char
		constexpr auto bAbsoluteScale = 0x14c; // Size: 1, Type: char
		constexpr auto bVisible = 0x14c; // Size: 1, Type: char
		constexpr auto bShouldBeAttached = 0x14c; // Size: 1, Type: char
		constexpr auto bShouldSnapLocationWhenAttached = 0x14c; // Size: 1, Type: char
		constexpr auto bShouldSnapRotationWhenAttached = 0x14d; // Size: 1, Type: char
		constexpr auto bShouldUpdatePhysicsVolume = 0x14d; // Size: 1, Type: char
		constexpr auto bHiddenInGame = 0x14d; // Size: 1, Type: char
		constexpr auto bBoundsChangeTriggersStreamingDataRebuild = 0x14d; // Size: 1, Type: char
		constexpr auto bUseAttachParentBound = 0x14d; // Size: 1, Type: char
		constexpr auto Mobility = 0x14f; // Size: 1, Type: enum class EComponentMobility
		constexpr auto DetailMode = 0x150; // Size: 1, Type: enum class EDetailMode
		constexpr auto PhysicsVolumeChangedDelegate = 0x151; // Size: 1, Type: struct FMulticastSparseDelegate
	}

	namespace ABP_ChessBoard_C
	{
		constexpr auto UberGraphFrame = 0x230; // Size: 8, Type: struct FPointerToUberGraphFrame
		constexpr auto GameFocusChecker = 0x238; // Size: 8, Type: struct UGameFocusChecker_C*
		constexpr auto MovePieceSpline = 0x240; // Size: 8, Type: struct USplineComponent*
		constexpr auto BlackPath = 0x248; // Size: 8, Type: struct USplineComponent*
		constexpr auto WhitePath = 0x250; // Size: 8, Type: struct USplineComponent*
		constexpr auto BlackStartingPos = 0x258; // Size: 8, Type: struct USceneComponent*
		constexpr auto WhiteStartingPos = 0x260; // Size: 8, Type: struct USceneComponent*
		constexpr auto PlayerTwoPos = 0x268; // Size: 8, Type: struct USceneComponent*
		constexpr auto PlayerOnePos = 0x270; // Size: 8, Type: struct USceneComponent*
		constexpr auto MovePoint2_Time_A472CB844B98E05A3C88658B8A3E6768 = 0x278; // Size: 4, Type: float
		constexpr auto MovePoint2__Direction_A472CB844B98E05A3C88658B8A3E6768 = 0x27c; // Size: 1, Type: enum class ETimelineDirection
		constexpr auto MovePoint2 = 0x280; // Size: 8, Type: struct UTimelineComponent*
		constexpr auto MoveCamera2_time_0ED88E1A41E85F3F91BD7A97DA8AF1EB = 0x288; // Size: 4, Type: float
		constexpr auto MoveCamera2__Direction_0ED88E1A41E85F3F91BD7A97DA8AF1EB = 0x28c; // Size: 1, Type: enum class ETimelineDirection
		constexpr auto MoveCamera2 = 0x290; // Size: 8, Type: struct UTimelineComponent*
		constexpr auto MoveCamera1_time_0748500A4F4B3B8CFB908AAEC6D968E9 = 0x298; // Size: 4, Type: float
		constexpr auto MoveCamera1__Direction_0748500A4F4B3B8CFB908AAEC6D968E9 = 0x29c; // Size: 1, Type: enum class ETimelineDirection
		constexpr auto MoveCamera1 = 0x2a0; // Size: 8, Type: struct UTimelineComponent*
		constexpr auto GoToStartBlack_time_C3FBC7F64411B7BDCD50FFBDDC578640 = 0x2a8; // Size: 4, Type: float
		constexpr auto GoToStartBlack__Direction_C3FBC7F64411B7BDCD50FFBDDC578640 = 0x2ac; // Size: 1, Type: enum class ETimelineDirection
		constexpr auto GoToStartBlack = 0x2b0; // Size: 8, Type: struct UTimelineComponent*
		constexpr auto GoToStart_time_66131BFF4A0077938210FFA09AC39BC7 = 0x2b8; // Size: 4, Type: float
		constexpr auto GoToStart__Direction_66131BFF4A0077938210FFA09AC39BC7 = 0x2bc; // Size: 1, Type: enum class ETimelineDirection
		constexpr auto GoToStart = 0x2c0; // Size: 8, Type: struct UTimelineComponent*
		constexpr auto Grid = 0x2c8; // Size: 16, Type: struct TArray<struct ABP_Square_C*>
		constexpr auto PieceScale = 0x2d8; // Size: 12, Type: struct FVector
		constexpr auto WhitePieces = 0x2e8; // Size: 16, Type: struct TArray<struct ABP_Piece_C*>
		constexpr auto PlayerOne = 0x2f8; // Size: 8, Type: struct ABP_Player_C*
		constexpr auto BlackPieces = 0x300; // Size: 16, Type: struct TArray<struct ABP_Piece_C*>
		constexpr auto PieceHeight = 0x310; // Size: 4, Type: float
		constexpr auto PlayerTwo = 0x318; // Size: 8, Type: struct ABP_Player_C*
		constexpr auto WhiteTurn = 0x320; // Size: 1, Type: bool
		constexpr auto BlackTurn = 0x321; // Size: 1, Type: bool
		constexpr auto PieceCharTemp = 0x328; // Size: 8, Type: struct ABP_PieceChar_C*
		constexpr auto EnPessantTarget = 0x330; // Size: 8, Type: struct ABP_Square_C*
		constexpr auto PieceChar1 = 0x338; // Size: 8, Type: struct ABP_PieceChar_C*
		constexpr auto PieceChar2 = 0x340; // Size: 8, Type: struct ABP_PieceChar_C*
		constexpr auto VsCutscene = 0x348; // Size: 8, Type: struct ABP_VsCutscene_C*
		constexpr auto startTimer = 0x350; // Size: 4, Type: int32_t
		constexpr auto TimeUntilStart = 0x354; // Size: 4, Type: int32_t
		constexpr auto CountdownTimer = 0x358; // Size: 8, Type: struct FTimerHandle
		constexpr auto UnlockAbilitiesDelay = 0x360; // Size: 4, Type: float
		constexpr auto Losers = 0x368; // Size: 16, Type: struct TArray<struct ABP_PieceChar_C*>
		constexpr auto CameraStart1 = 0x380; // Size: 48, Type: struct FTransform
		constexpr auto CameraStart2 = 0x3b0; // Size: 48, Type: struct FTransform
		constexpr auto EndingCombat = 0x3e0; // Size: 1, Type: bool
		constexpr auto NobodyTurn = 0x3e1; // Size: 1, Type: bool
		constexpr auto Singleplayer = 0x3e2; // Size: 1, Type: bool
		constexpr auto InCombat = 0x3e3; // Size: 1, Type: bool
		constexpr auto MusicPlayer = 0x3e8; // Size: 8, Type: struct AGramaphone_C*
		constexpr auto GameOverFlag = 0x3f0; // Size: 1, Type: bool
		constexpr auto BlackWin = 0x3f1; // Size: 1, Type: bool
		constexpr auto isDefaultBoard = 0x3f2; // Size: 1, Type: bool
		constexpr auto LocalMultiplayer = 0x3f3; // Size: 1, Type: bool
		constexpr auto CombatEnded = 0x3f8; // Size: 16, Type: struct FMulticastInlineDelegate
		constexpr auto CombatStarted = 0x408; // Size: 16, Type: struct FMulticastInlineDelegate
		constexpr auto CastlingKing = 0x418; // Size: 16, Type: struct FMulticastInlineDelegate
		constexpr auto MoveQueue = 0x428; // Size: 16, Type: struct TArray<struct FMove>
		constexpr auto NextMove = 0x438; // Size: 16, Type: struct FMove
		constexpr auto WhiteKingCount = 0x448; // Size: 4, Type: int32_t
		constexpr auto BlackKingCount = 0x44c; // Size: 4, Type: int32_t
		constexpr auto TieFlag = 0x450; // Size: 1, Type: bool
		constexpr auto WhiteStartedWithKings = 0x451; // Size: 1, Type: bool
		constexpr auto BlackStartedWithKings = 0x452; // Size: 1, Type: bool
		constexpr auto BSideDefault = 0x453; // Size: 1, Type: bool
	}

	namespace ABP_PieceChar_C
	{
		constexpr auto UberGraphFrame = 0x4c0; // Size: 8, Type: struct FPointerToUberGraphFrame
		constexpr auto HeadHitbox = 0x4c8; // Size: 8, Type: struct USphereComponent*
		constexpr auto Weapon3P = 0x4d0; // Size: 8, Type: struct USkeletalMeshComponent*
		constexpr auto Weapon = 0x4d8; // Size: 8, Type: struct USkeletalMeshComponent*
		constexpr auto SpringArm = 0x4e0; // Size: 8, Type: struct USpringArmComponent*
		constexpr auto KillcamRecorder = 0x4e8; // Size: 8, Type: struct UKillcamRecorder_C*
		constexpr auto WalkBlockAnimation = 0x4f0; // Size: 8, Type: struct UActorSequenceComponent*
		constexpr auto WalkAnimation = 0x4f8; // Size: 8, Type: struct UActorSequenceComponent*
		constexpr auto FireAnimation = 0x500; // Size: 8, Type: struct UActorSequenceComponent*
		constexpr auto DeathCamPos = 0x508; // Size: 8, Type: struct USceneComponent*
		constexpr auto DeathCam = 0x510; // Size: 8, Type: struct USpringArmComponent*
		constexpr auto CrackCapture = 0x518; // Size: 8, Type: struct USceneCaptureComponent2D*
		constexpr auto BlockingBox = 0x520; // Size: 8, Type: struct UBoxComponent*
		constexpr auto BlockingAnimation = 0x528; // Size: 8, Type: struct UActorSequenceComponent*
		constexpr auto Joint = 0x530; // Size: 8, Type: struct USceneComponent*
		constexpr auto GunTransform = 0x538; // Size: 8, Type: struct USceneComponent*
		constexpr auto GunTip = 0x540; // Size: 8, Type: struct USceneComponent*
		constexpr auto FP_Camera = 0x548; // Size: 8, Type: struct UCameraComponent*
		constexpr auto Timeline_1_Block_85D8ADDF4C0654DF88472098880E8CA8 = 0x550; // Size: 4, Type: float
		constexpr auto Timeline_1__Direction_85D8ADDF4C0654DF88472098880E8CA8 = 0x554; // Size: 1, Type: enum class ETimelineDirection
		constexpr auto Timeline_2 = 0x558; // Size: 8, Type: struct UTimelineComponent*
		constexpr auto Timeline_0_Block_41A7A33047C3E00C28E0BDBEBF56AACA = 0x560; // Size: 4, Type: float
		constexpr auto Timeline_0__Direction_41A7A33047C3E00C28E0BDBEBF56AACA = 0x564; // Size: 1, Type: enum class ETimelineDirection
		constexpr auto Timeline_1 = 0x568; // Size: 8, Type: struct UTimelineComponent*
		constexpr auto BoardSquare = 0x570; // Size: 8, Type: struct ABP_Square_C*
		constexpr auto Selected = 0x578; // Size: 1, Type: bool
		constexpr auto Black = 0x579; // Size: 1, Type: bool
		constexpr auto MaxHealth = 0x57c; // Size: 4, Type: float
		constexpr auto Health = 0x580; // Size: 4, Type: float
		constexpr auto BulletSpeed = 0x584; // Size: 4, Type: float
		constexpr auto ContestedSquare = 0x588; // Size: 8, Type: struct ABP_Square_C*
		constexpr auto OwningPlayer = 0x590; // Size: 8, Type: struct ABP_Player_C*
		constexpr auto HitscanRange = 0x598; // Size: 4, Type: float
		constexpr auto BulletStrength = 0x59c; // Size: 4, Type: float
		constexpr auto Accuracy = 0x5a0; // Size: 4, Type: float
		constexpr auto ShootDelay = 0x5a4; // Size: 4, Type: float
		constexpr auto HitmarkerDelay = 0x5a8; // Size: 4, Type: float
		constexpr auto Shooting = 0x5ac; // Size: 1, Type: bool
		constexpr auto ShootingTimer = 0x5b0; // Size: 8, Type: struct FTimerHandle
		constexpr auto PieceHUD = 0x5b8; // Size: 8, Type: struct UPieceHUD_C*
		constexpr auto Dead = 0x5c0; // Size: 1, Type: bool
		constexpr auto RepresentedPiece = 0x5c8; // Size: 8, Type: struct ABP_Piece_C*
		constexpr auto Opponents = 0x5d0; // Size: 16, Type: struct TArray<struct ABP_PieceChar_C*>
		constexpr auto ChessBoard = 0x5e0; // Size: 8, Type: struct ABP_ChessBoard_C*
		constexpr auto IsAbility = 0x5e8; // Size: 1, Type: bool
		constexpr auto mainAbilityTimer = 0x5ec; // Size: 4, Type: float
		constexpr auto MainAbilityCooldown = 0x5f0; // Size: 4, Type: float
		constexpr auto MovementAbilityTimer = 0x5f4; // Size: 4, Type: float
		constexpr auto MovementAbilityCooldown = 0x5f8; // Size: 4, Type: float
		constexpr auto ControlVector = 0x5fc; // Size: 12, Type: struct FVector
		constexpr auto ShootDamage = 0x608; // Size: 4, Type: float
		constexpr auto MouseSensitivity = 0x60c; // Size: 4, Type: float
		constexpr auto blockRefreshRate = 0x610; // Size: 4, Type: float
		constexpr auto blockCooldown = 0x614; // Size: 4, Type: float
		constexpr auto MaxBlockedDamage = 0x618; // Size: 4, Type: float
		constexpr auto Blocking = 0x61c; // Size: 1, Type: bool
		constexpr auto BlockStart = 0x620; // Size: 12, Type: struct FVector
		constexpr auto BlockEnd = 0x62c; // Size: 12, Type: struct FVector
		constexpr auto blockedDamage = 0x638; // Size: 4, Type: float
		constexpr auto blockRecharging = 0x63c; // Size: 1, Type: bool
		constexpr auto PrevHealth = 0x640; // Size: 4, Type: float
		constexpr auto ParentPlayerPiece = 0x648; // Size: 8, Type: struct ABP_PieceChar_C*
		constexpr auto MovementBlocked = 0x650; // Size: 1, Type: bool
		constexpr auto AbilitiesBlocked = 0x651; // Size: 1, Type: bool
		constexpr auto HealthRegenRate = 0x654; // Size: 4, Type: float
		constexpr auto HealthRegenCooldown = 0x658; // Size: 4, Type: float
		constexpr auto CanRegenHealth = 0x65c; // Size: 1, Type: bool
		constexpr auto RegenHealthTimer = 0x660; // Size: 8, Type: struct FTimerHandle
		constexpr auto RegenCrackUpdateInterval = 0x668; // Size: 4, Type: float
		constexpr auto RegenCrackTimer = 0x66c; // Size: 4, Type: float
		constexpr auto WallClimbing = 0x670; // Size: 1, Type: bool
		constexpr auto ClimbSpeed = 0x674; // Size: 4, Type: float
		constexpr auto ShootSound = 0x678; // Size: 1, Type: enum class Sounds
		constexpr auto MaxDamageRange = 0x67c; // Size: 4, Type: float
		constexpr auto DamageFalloffRate = 0x680; // Size: 4, Type: float
		constexpr auto MinDamage = 0x684; // Size: 4, Type: float
		constexpr auto CurrentBlockingAnimation = 0x688; // Size: 8, Type: struct UActorSequenceComponent*
		constexpr auto CurrentFiringAnimation = 0x690; // Size: 8, Type: struct UActorSequenceComponent*
		constexpr auto AscendingWall = 0x698; // Size: 1, Type: bool
		constexpr auto Walking = 0x699; // Size: 1, Type: bool
		constexpr auto CurrentWalkingAnimation = 0x6a0; // Size: 8, Type: struct UActorSequenceComponent*
		constexpr auto DefaultWalkSpeed = 0x6a8; // Size: 4, Type: float
		constexpr auto CameraLocked = 0x6ac; // Size: 1, Type: bool
		constexpr auto PieceType = 0x6ad; // Size: 1, Type: enum class PieceTypes
		constexpr auto Suicide = 0x6ae; // Size: 1, Type: bool
		constexpr auto crosshairDistance = 0x6b0; // Size: 4, Type: float
		constexpr auto crosshairSize = 0x6b4; // Size: 8, Type: struct FVector2D
		constexpr auto TrailVFX = 0x6c0; // Size: 8, Type: struct UNiagaraSystem*
		constexpr auto FireVFX = 0x6c8; // Size: 8, Type: struct UNiagaraSystem*
		constexpr auto playbackjumping = 0x6d0; // Size: 1, Type: bool
		constexpr auto InvertY = 0x6d1; // Size: 1, Type: bool
		constexpr auto chatOnCooldown = 0x6d2; // Size: 1, Type: bool
		constexpr auto CurrentHitmarkerTimer = 0x6d8; // Size: 8, Type: struct FTimerHandle
		constexpr auto previoushitmarker = 0x6e0; // Size: 4, Type: int32_t
		constexpr auto GamepadXY = 0x6e4; // Size: 8, Type: struct FVector2D
		constexpr auto CanHeadshot = 0x6ec; // Size: 1, Type: bool
		constexpr auto BSide = 0x6ed; // Size: 1, Type: bool
	}

	namespace AMetaCharacter
	{
		constexpr auto DeltaSeconds = 0x4c8; // Size: 4, Type: float
		constexpr auto mIsUsingProfileFromScenario = 0x4cc; // Size: 1, Type: bool
		constexpr auto K2_OnProfileChanged = 0x4d0; // Size: 16, Type: struct FMulticastInlineDelegate
		constexpr auto Lives = 0x500; // Size: 4, Type: int32_t
		constexpr auto bFirstSpawn = 0x504; // Size: 1, Type: bool
		constexpr auto bFullyLoaded = 0x505; // Size: 1, Type: bool
		constexpr auto bCanManualRespawn = 0x506; // Size: 1, Type: bool
		constexpr auto ManualRespawnTimer = 0x508; // Size: 8, Type: struct FTimerHandle
		constexpr auto RespawnTimer = 0x510; // Size: 8, Type: struct FTimerHandle
		constexpr auto K2_RespawnEvent = 0x518; // Size: 16, Type: struct FMulticastInlineDelegate
		constexpr auto SV_PostProcess = 0x548; // Size: 8, Type: struct UPostProcessComponent*
		constexpr auto SV_DistortionSphere = 0x550; // Size: 8, Type: struct UStaticMeshComponent*
		constexpr auto SV_DetectionSphere = 0x558; // Size: 8, Type: struct USphereComponent*
		constexpr auto TargetMarker = 0x560; // Size: 8, Type: struct ATargetMarker*
		constexpr auto MyProjectilePredictedLocation = 0x568; // Size: 12, Type: struct FVector
		constexpr auto AbilityHandler = 0x578; // Size: 8, Type: struct AAbilityHandler*
		constexpr auto WeaponHandler = 0x580; // Size: 8, Type: struct AWeaponHandler*
		constexpr auto PawnSensing = 0x588; // Size: 8, Type: struct UPawnSensingComponent*
		constexpr auto PlaybackComponent = 0x590; // Size: 8, Type: struct UPlayerPlaybackComponent*
		constexpr auto Pistol = 0x5a8; // Size: 8, Type: struct UStaticMeshComponent*
		constexpr auto Pistol2 = 0x5b0; // Size: 8, Type: struct UStaticMeshComponent*
		constexpr auto MyPlayerController = 0x5b8; // Size: 8, Type: struct AMetaPlayerController*
		constexpr auto ViewModel_Native = 0x5c0; // Size: 8, Type: struct AFPSPlayer_WeaponComponentActor*
		constexpr auto CharacterProfileName = 0x5c8; // Size: 16, Type: struct FString
		constexpr auto mCharacterProfileNative = 0x5d8; // Size: 688, Type: struct FCharacterProfileNative
		constexpr auto MyAiController = 0x888; // Size: 8, Type: struct ATheMetaAIController*
		constexpr auto Healthbar = 0x8a0; // Size: 8, Type: struct UCharacterOwnedWidgetComponent*
		constexpr auto Infobar = 0x8a8; // Size: 8, Type: struct UCharacterOwnedWidgetComponent*
		constexpr auto TargetHud = 0x8b0; // Size: 8, Type: struct UTargetHudComponent*
		constexpr auto FloatingTextPool = 0x8b8; // Size: 8, Type: struct AFloatingTextPool*
		constexpr auto AbilityWeapons = 0x8c0; // Size: 16, Type: struct TArray<struct AWeaponParentActor*>
		constexpr auto OnAbilityHandlerInitialized = 0x8d0; // Size: 16, Type: struct FMulticastInlineDelegate
		constexpr auto SlowShotFiredNative = 0x8e0; // Size: 16, Type: struct FMulticastInlineDelegate
		constexpr auto OnWeaponHandlerInitialized = 0x8f0; // Size: 16, Type: struct FMulticastInlineDelegate
		constexpr auto CachedWeapons = 0x900; // Size: 16, Type: struct TArray<struct AWeaponParentActor*>
		constexpr auto CameraViewbobShifter = 0x910; // Size: 8, Type: struct USceneComponent*
		constexpr auto SpringArm = 0x918; // Size: 8, Type: struct USpringArmComponent*
		constexpr auto FirstPersonCamera = 0x920; // Size: 8, Type: struct UCameraComponent*
		constexpr auto ThirdPersonCamera = 0x928; // Size: 8, Type: struct UCameraComponent*
		constexpr auto CurrentCamera = 0x930; // Size: 8, Type: struct UCameraComponent*
		constexpr auto DeathCamera = 0x938; // Size: 8, Type: struct ADummyCamera*
		constexpr auto bForceFPSCamera = 0x940; // Size: 1, Type: bool
		constexpr auto AimPunchDownApplied = 0x944; // Size: 4, Type: float
		constexpr auto AimPunchUpApplied = 0x948; // Size: 4, Type: float
		constexpr auto AimPunchTimeLeft = 0x94c; // Size: 4, Type: float
		constexpr auto bAimPunchActive = 0x950; // Size: 1, Type: bool
		constexpr auto bUpAimPunch = 0x951; // Size: 1, Type: bool
		constexpr auto AimPunchUp = 0x954; // Size: 4, Type: float
		constexpr auto AimPunchResetTime = 0x958; // Size: 4, Type: float
		constexpr auto bAimPunchIsCosmeticOnly = 0x95c; // Size: 1, Type: bool
		constexpr auto AimPunchPeakTime = 0x960; // Size: 4, Type: float
		constexpr auto TurnAxis = 0x964; // Size: 4, Type: float
		constexpr auto YAngleIdle = 0x968; // Size: 4, Type: float
		constexpr auto ZAngleIdle = 0x96c; // Size: 4, Type: float
		constexpr auto bFightStarted = 0x970; // Size: 1, Type: bool
		constexpr auto bRecording = 0x971; // Size: 1, Type: bool
		constexpr auto FightStart = 0x978; // Size: 8, Type: struct FDateTime
		constexpr auto LastTTK = 0x980; // Size: 8, Type: struct FTimespan
		constexpr auto KillCount = 0x988; // Size: 4, Type: int32_t
		constexpr auto DeathCount = 0x98c; // Size: 4, Type: int32_t
		constexpr auto KillStatistics = 0x990; // Size: 16, Type: struct TArray<struct FString>
		constexpr auto TotalOverShots = 0x9a0; // Size: 4, Type: int32_t
		constexpr auto TotalFightTime = 0x9a8; // Size: 8, Type: struct FTimespan
		constexpr auto UniqueAttackers = 0x9b0; // Size: 16, Type: struct TArray<struct AMetaCharacter*>
		constexpr auto RecordingBuffer = 0x9c0; // Size: 16, Type: struct FString
		constexpr auto DirectCount = 0x9d0; // Size: 4, Type: int32_t
		constexpr auto DirectedCount = 0x9d4; // Size: 4, Type: int32_t
		constexpr auto MidairCount = 0x9d8; // Size: 4, Type: int32_t
		constexpr auto MidairedCount = 0x9dc; // Size: 4, Type: int32_t
		constexpr auto DamageDone = 0x9e0; // Size: 4, Type: float
		constexpr auto DamageTaken = 0x9e4; // Size: 4, Type: float
		constexpr auto LastScore = 0x9e8; // Size: 4, Type: float
		constexpr auto DamageDoneThisKill = 0x9ec; // Size: 4, Type: float
		constexpr auto TickSum = 0x9f0; // Size: 4, Type: float
		constexpr auto TickCount = 0x9f4; // Size: 4, Type: int32_t
		constexpr auto ReloadCount = 0x9f8; // Size: 4, Type: int32_t
		constexpr auto ChallengeStartTime = 0xa00; // Size: 24, Type: struct FText
		constexpr auto AerialReason = 0xa18; // Size: 16, Type: struct FString
		constexpr auto LastMovementAbilityName = 0xa28; // Size: 16, Type: struct FString
		constexpr auto LastMovementAbilityTime = 0xa38; // Size: 4, Type: float
		constexpr auto LastStopFiringTime = 0xa3c; // Size: 4, Type: float
		constexpr auto LastShotFiredTime = 0xa40; // Size: 4, Type: float
		constexpr auto TargetPlatform = 0xa48; // Size: 8, Type: struct ATheMetaTrainerTargetPlatform*
		constexpr auto HeadParamName = 0xa50; // Size: 8, Type: struct FName
		constexpr auto BodyParamName = 0xa58; // Size: 8, Type: struct FName
		constexpr auto BodyBB = 0xa60; // Size: 8, Type: struct USceneComponent*
		constexpr auto ProjBB = 0xa68; // Size: 8, Type: struct USceneComponent*
		constexpr auto CurrentHead = 0xa70; // Size: 8, Type: struct UStaticMeshComponent*
		constexpr auto CurrentBody = 0xa78; // Size: 8, Type: struct UStaticMeshComponent*
		constexpr auto CylinderComponents = 0xa80; // Size: 16, Type: struct TArray<struct UStaticMeshComponent*>
		constexpr auto CylHead = 0xa90; // Size: 8, Type: struct UStaticMeshComponent*
		constexpr auto CylBody = 0xa98; // Size: 8, Type: struct UStaticMeshComponent*
		constexpr auto CylTopSphere = 0xaa0; // Size: 8, Type: struct UStaticMeshComponent*
		constexpr auto CylBottomSphere = 0xaa8; // Size: 8, Type: struct UStaticMeshComponent*
		constexpr auto PCylinderComponents = 0xab0; // Size: 16, Type: struct TArray<struct UStaticMeshComponent*>
		constexpr auto PCylHead = 0xac0; // Size: 8, Type: struct UStaticMeshComponent*
		constexpr auto PCylBody = 0xac8; // Size: 8, Type: struct UStaticMeshComponent*
		constexpr auto PCylTopSphere = 0xad0; // Size: 8, Type: struct UStaticMeshComponent*
		constexpr auto PCylBottomSphere = 0xad8; // Size: 8, Type: struct UStaticMeshComponent*
		constexpr auto SphereComponents = 0xae0; // Size: 16, Type: struct TArray<struct UStaticMeshComponent*>
		constexpr auto SphereHead = 0xaf0; // Size: 8, Type: struct UStaticMeshComponent*
		constexpr auto SphereBody = 0xaf8; // Size: 8, Type: struct UStaticMeshComponent*
		constexpr auto PSphereComponents = 0xb00; // Size: 16, Type: struct TArray<struct UStaticMeshComponent*>
		constexpr auto PSphereHead = 0xb10; // Size: 8, Type: struct UStaticMeshComponent*
		constexpr auto PSphereBody = 0xb18; // Size: 8, Type: struct UStaticMeshComponent*
		constexpr auto CubeComponents = 0xb20; // Size: 16, Type: struct TArray<struct UStaticMeshComponent*>
		constexpr auto CubeHead = 0xb30; // Size: 8, Type: struct UStaticMeshComponent*
		constexpr auto CubeBody = 0xb38; // Size: 8, Type: struct UStaticMeshComponent*
		constexpr auto PCubeComponents = 0xb40; // Size: 16, Type: struct TArray<struct UStaticMeshComponent*>
		constexpr auto PCubeHead = 0xb50; // Size: 8, Type: struct UStaticMeshComponent*
		constexpr auto PCubeBody = 0xb58; // Size: 8, Type: struct UStaticMeshComponent*
		constexpr auto GibBody = 0xb60; // Size: 8, Type: struct ASkeletalMeshActor*
		constexpr auto EctoPhysicsAsset = 0xb68; // Size: 8, Type: struct UPhysicsAsset*
		constexpr auto EndoPhysicsAsset = 0xb70; // Size: 8, Type: struct UPhysicsAsset*
		constexpr auto MesoPhysicsAsset = 0xb78; // Size: 8, Type: struct UPhysicsAsset*
		constexpr auto CharacterModelType = 0xb80; // Size: 1, Type: enum class ECharacterModelType
		constexpr auto OnColorsSet = 0xb88; // Size: 16, Type: struct FMulticastInlineDelegate
		constexpr auto ColorManagerComponent = 0xb98; // Size: 8, Type: struct UColorManagerComponent*
		constexpr auto AuraSizeMultiplier = 0xba0; // Size: 4, Type: float
		constexpr auto bOnEnemyTeam = 0xba4; // Size: 1, Type: bool
		constexpr auto Team = 0xba8; // Size: 4, Type: int32_t
		constexpr auto TeamOverride = 0xbac; // Size: 4, Type: int32_t
		constexpr auto CharacterZLocation = 0xbb0; // Size: 4, Type: float
		constexpr auto AscendingOrDescending = 0xbb4; // Size: 1, Type: bool
		constexpr auto LastVelocity = 0xbb8; // Size: 12, Type: struct FVector
		constexpr auto Speed = 0xbc4; // Size: 4, Type: float
		constexpr auto JumpPoseAlpha = 0xbc8; // Size: 4, Type: float
		constexpr auto HowHigh = 0xbcc; // Size: 4, Type: float
		constexpr auto WorldRotationIdle = 0xbd0; // Size: 12, Type: struct FRotator
		constexpr auto ViewBobAngleSum = 0xbdc; // Size: 4, Type: float
		constexpr auto bFlagSetRotation = 0xbe0; // Size: 1, Type: bool
		constexpr auto CrouchTimeline = 0xbe8; // Size: 152, Type: struct FTimeline
		constexpr auto JetpackNative = 0xca8; // Size: 32, Type: struct FJetpackNative
		constexpr auto SprintProfileNative = 0xcc8; // Size: 120, Type: struct FS_SprintAbilityNative
		constexpr auto bCrouching = 0xd40; // Size: 1, Type: char
		constexpr auto bCrouchHeld = 0xd40; // Size: 1, Type: char
		constexpr auto bJumpHeld = 0xd40; // Size: 1, Type: char
		constexpr auto bWantsCrouch = 0xd40; // Size: 1, Type: char
		constexpr auto bWantsJump = 0xd40; // Size: 1, Type: char
		constexpr auto bLastOnGround = 0xd41; // Size: 1, Type: bool
		constexpr auto bCrouchBlocked = 0xd42; // Size: 1, Type: bool
		constexpr auto bJetpackBlocked = 0xd43; // Size: 1, Type: bool
		constexpr auto bJumpBlocked = 0xd44; // Size: 1, Type: bool
		constexpr auto bAirJumpBlocked = 0xd45; // Size: 1, Type: bool
		constexpr auto bSprintedOnce = 0xd46; // Size: 1, Type: bool
		constexpr auto bSpawnJumpBlocked = 0xd47; // Size: 1, Type: bool
		constexpr auto CrouchModHeight = 0xd48; // Size: 4, Type: float
		constexpr auto AxisForward = 0xd4c; // Size: 4, Type: float
		constexpr auto AxisRight = 0xd50; // Size: 4, Type: float
		constexpr auto CrouchAlpha = 0xd54; // Size: 4, Type: float
		constexpr auto ADSMoveScale = 0xd58; // Size: 4, Type: float
		constexpr auto JetpackFuel = 0xd5c; // Size: 4, Type: float
		constexpr auto AirJumpLeft = 0xd60; // Size: 4, Type: int32_t
		constexpr auto MaxAirJumps = 0xd64; // Size: 4, Type: int32_t
		constexpr auto LastCapsuleHalfHeight = 0xd68; // Size: 4, Type: float
		constexpr auto ChargeMoveScale = 0xd6c; // Size: 4, Type: float
		constexpr auto TagFactor = 0xd70; // Size: 4, Type: float
		constexpr auto TagTimelineStart = 0xd74; // Size: 4, Type: float
		constexpr auto CurrentJumpSpeedFactor = 0xd78; // Size: 4, Type: float
		constexpr auto MetaSpeedMultiplier = 0xd7c; // Size: 4, Type: float
		constexpr auto CachedSprintSpeed = 0xd80; // Size: 4, Type: float
		constexpr auto UnblockSpawnJumpTimer = 0xd88; // Size: 8, Type: struct FTimerHandle
		constexpr auto AnimMontageGenjiDoubleJump = 0xd90; // Size: 8, Type: struct UAnimMontage*
		constexpr auto BasicCube = 0xd98; // Size: 8, Type: struct UStaticMesh*
		constexpr auto BasicCylinder = 0xda0; // Size: 8, Type: struct UStaticMesh*
		constexpr auto BasicSphere = 0xda8; // Size: 8, Type: struct UStaticMesh*
		constexpr auto PumpkinMaterial = 0xdb0; // Size: 8, Type: struct UMaterialInterface*
		constexpr auto BiasedForward = 0xdb8; // Size: 4, Type: float
		constexpr auto BiasedRight = 0xdbc; // Size: 4, Type: float
		constexpr auto FlyUpSeconds = 0xdc0; // Size: 4, Type: float
		constexpr auto FlyDownSeconds = 0xdc4; // Size: 4, Type: float
		constexpr auto bAbilityBlockingAttack = 0xdd0; // Size: 1, Type: bool
		constexpr auto bAbilityBlockingTurn = 0xdd1; // Size: 1, Type: bool
		constexpr auto bAbilityBlockingMovement = 0xdd2; // Size: 1, Type: bool
		constexpr auto K2_OnStunned = 0xdd8; // Size:	 16, Type: struct FMulticastInlineDelegate
		constexpr auto bStunned = 0xe00; // Size: 1, Type: bool
		constexpr auto UnStunTimer = 0xe08; // Size: 8, Type: struct FTimerHandle
		constexpr auto Health = 0xe10; // Size: 4, Type: float
		constexpr auto K2_HealthChangedEvent = 0xe18; // Size: 16, Type: struct FMulticastInlineDelegate
		constexpr auto RegenHealthTimer = 0xe40; // Size: 8, Type: struct FTimerHandle
		constexpr auto bTheMetaInvulnerable = 0xe48; // Size: 1, Type: bool
		constexpr auto bRespawnInvulnerable = 0xe4b; // Size: 1, Type: bool
		constexpr auto bAbilityBlockingDamage = 0xe4c; // Size: 1, Type: bool
	}

}
	